<?php
/**
 * ProductSummaryApi
 * PHP version 7.4
 *
 * @category Class
 * @package  macropage\SDKs\ebay\rest\catalog
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Catalog API
 *
 * The Catalog API allows users to search for and locate an eBay catalog product that is a direct match for the product that they wish to sell. Listing against an eBay catalog product helps insure that all listings (based off of that catalog product) have complete and accurate information. In addition to helping to create high-quality listings, another benefit to the seller of using catalog information to create listings is that much of the details of the listing will be prefilled, including the listing title, the listing description, the item specifics, and a stock image for the product (if available). Sellers will not have to enter item specifics themselves, and the overall listing process is a lot faster and easier.
 *
 * The version of the OpenAPI document: v1_beta.5.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.4.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace macropage\SDKs\ebay\rest\catalog\API;

use GuzzleHttp\Client;
use GuzzleHttp\ClientInterface;
use GuzzleHttp\Exception\ConnectException;
use GuzzleHttp\Exception\RequestException;
use GuzzleHttp\Psr7\MultipartStream;
use GuzzleHttp\Psr7\Request;
use GuzzleHttp\RequestOptions;
use macropage\SDKs\ebay\rest\catalog\ApiException;
use macropage\SDKs\ebay\rest\catalog\Configuration;
use macropage\SDKs\ebay\rest\catalog\HeaderSelector;
use macropage\SDKs\ebay\rest\catalog\ObjectSerializer;

/**
 * ProductSummaryApi Class Doc Comment
 *
 * @category Class
 * @package  macropage\SDKs\ebay\rest\catalog
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class ProductSummaryApi
{
    /**
     * @var ClientInterface
     */
    protected $client;

    /**
     * @var Configuration
     */
    protected $config;

    /**
     * @var HeaderSelector
     */
    protected $headerSelector;

    /**
     * @var int Host index
     */
    protected $hostIndex;

    /** @var string[] $contentTypes **/
    public const contentTypes = [
        'search' => [
            'application/json',
        ],
    ];

/**
     * @param ClientInterface $client
     * @param Configuration   $config
     * @param HeaderSelector  $selector
     * @param int             $hostIndex (Optional) host index to select the list of hosts if defined in the OpenAPI spec
     */
    public function __construct(
        ClientInterface $client = null,
        Configuration $config = null,
        HeaderSelector $selector = null,
        $hostIndex = 0
    ) {
        $this->client = $client ?: new Client();
        $this->config = $config ?: new Configuration();
        $this->headerSelector = $selector ?: new HeaderSelector();
        $this->hostIndex = $hostIndex;
    }

    /**
     * Set the host index
     *
     * @param int $hostIndex Host index (required)
     */
    public function setHostIndex($hostIndex): void
    {
        $this->hostIndex = $hostIndex;
    }

    /**
     * Get the host index
     *
     * @return int Host index
     */
    public function getHostIndex()
    {
        return $this->hostIndex;
    }

    /**
     * @return Configuration
     */
    public function getConfig()
    {
        return $this->config;
    }

    /**
     * Operation search
     *
     * @param  string $xEBAYCMARKETPLACEID This method also uses the &lt;code&gt;X-EBAY-C-MARKETPLACE-ID&lt;/code&gt; header to identify the seller&#39;s eBay marketplace. It is required for all marketplaces except EBAY_US, which is the default. &lt;b&gt;Note:&lt;/b&gt; This method is limited to &lt;code&gt;EBAY_US&lt;/code&gt;, &lt;code&gt;EBAY_AU&lt;/code&gt;, &lt;code&gt;EBAY_CA&lt;/code&gt;, and &lt;code&gt;EBAY_GB&lt;/code&gt; values. (optional)
     * @param  string $aspectFilter An eBay category and one or more aspects of that category, with the values that can be used to narrow down the collection of products returned by this call. &lt;br /&gt;&lt;br /&gt; Aspects are product attributes that can represent different types of information for different products. Every product has aspects, but different products have different sets of aspects. &lt;br /&gt;&lt;br /&gt; You can determine appropriate values for the aspects by first submitting this method without this parameter. It will return either the &lt;b&gt;productSummaries.aspects&lt;/b&gt; container, the &lt;b&gt;refinement.aspectDistributions&lt;/b&gt; container, or both, depending on the value of the &lt;b&gt;fieldgroups&lt;/b&gt; parameter in the request. The &lt;b&gt;productSummaries.aspects&lt;/b&gt; container provides the category aspects and their values that are associated with each returned product. The &lt;b&gt;refinement.aspectDistributions&lt;/b&gt; container provides information about the distribution of values of the set of category aspects associated with the specified categories. In both cases sellers can select from among the returned aspects to use with this parameter. &lt;br /&gt;&lt;br /&gt; &lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;strong&gt;Note:&lt;/strong&gt; You can also use the Taxonomy API&#39;s &lt;b&gt;getItemAspectsForCategory&lt;/b&gt; method to retrieve detailed information about aspects and their values that are appropriate for your selected category. &lt;/span&gt; &lt;br /&gt;&lt;br /&gt; The syntax for the &lt;b&gt;aspect_filter&lt;/b&gt; parameter is as follows (on several lines for readability; &lt;b&gt;categoryId&lt;/b&gt; is required): &lt;br /&gt;&lt;br /&gt; &lt;code&gt;aspect_filter&#x3D;categoryId:&lt;i&gt;category_id&lt;/i&gt;,&lt;br /&gt; &lt;i&gt;aspect1&lt;/i&gt;:{&lt;i&gt;valueA&lt;/i&gt;|&lt;i&gt;valueB&lt;/i&gt;|...},&lt;br /&gt; &lt;i&gt;aspect2&lt;/i&gt;:{&lt;i&gt;valueC&lt;/i&gt;|&lt;i&gt;valueD&lt;/i&gt;|...},.&lt;/code&gt; &lt;br /&gt;&lt;br /&gt; A matching product must be within the specified category, and it must have least one of the values identified for every specified aspect. &lt;br /&gt;&lt;br /&gt; &lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;strong&gt;Note:&lt;/strong&gt; Aspect names and values are case sensitive. &lt;/span&gt; &lt;br /&gt;&lt;br /&gt; Here is an example of an &lt;b&gt;aspect_filter&lt;/b&gt; parameter in which &lt;code&gt;9355&lt;/code&gt; is the category ID, &lt;code&gt;Color&lt;/code&gt; is an aspect of that category, and &lt;code&gt;Black&lt;/code&gt; and &lt;code&gt;White&lt;/code&gt; are possible values of that aspect (on several lines for readability): &lt;br /&gt;&lt;br /&gt; &lt;code&gt;GET https://api.ebay.com/commerce/catalog/v1_beta/product_summary/search?&lt;br /&gt; aspect_filter&#x3D;categoryId:9355,Color:{White|Black}&lt;/code&gt;    &lt;br /&gt;&lt;br /&gt; Here is the &lt;b&gt;aspect_filter&lt;/b&gt; with required URL encoding and a second aspect (on several lines for readability): &lt;br /&gt;&lt;br /&gt; &lt;code&gt;GET https://api.ebay.com/commerce/catalog/v1_beta/product_summary/search?&lt;br /&gt; aspect_filter&#x3D;categoryId:9355,Color:%7BWhite%7CBlack%7D,&lt;br /&gt; Storage%20Capacity:%128GB%7C256GB%7D&lt;/code&gt; &lt;br /&gt;&lt;br /&gt; &lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;strong&gt;Note:&lt;/strong&gt; You cannot use the &lt;b&gt;aspect_filter&lt;/b&gt; parameter in the same method with either the &lt;b&gt;gtin&lt;/b&gt; parameter or the &lt;b&gt;mpn&lt;/b&gt; parameter. &lt;/span&gt; For implementation help, refer to eBay API documentation at https://developer.ebay.com/api-docs/commerce/catalog/types/catal:AspectFilter (optional)
     * @param  string $categoryIds &lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;strong&gt;Important:&lt;/strong&gt; Currently, only the first &lt;b&gt;category_id&lt;/b&gt; value is accepted. &lt;/span&gt; &lt;br /&gt;&lt;br /&gt; One or more comma-separated category identifiers for narrowing down the collection of products returned by this call. &lt;br /&gt;&lt;br /&gt; &lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;strong&gt;Note:&lt;/strong&gt; This parameter requires a valid category ID value. You can use the Taxonomy API&#39;s &lt;b&gt;getCategorySuggestions&lt;/b&gt; method to retrieve appropriate category IDs for your product based on keywords. &lt;/span&gt; &lt;br /&gt;&lt;br /&gt; The syntax for this parameter is as follows: &lt;br /&gt;&lt;br /&gt; &lt;code&gt;category_ids&#x3D;&lt;i&gt;category_id1&lt;/i&gt;,&lt;i&gt;category_id2&lt;/i&gt;,.&lt;/code&gt; &lt;br /&gt;&lt;br /&gt; Here is an example of a method with the &lt;b&gt;category_ids&lt;/b&gt; parameter: br /&gt;&lt;br /&gt; &lt;code&gt;GET https://api.ebay.com/commerce/catalog/v1_beta/product_summary/search?&lt;br /&gt; category_ids&#x3D;178893&lt;/code&gt; &lt;br /&gt;&lt;br /&gt; &lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;strong&gt;Note:&lt;/strong&gt; Although all query parameters are optional, this method must include at least the &lt;b&gt;q&lt;/b&gt; parameter, or the &lt;b&gt;category_ids&lt;/b&gt;, &lt;b&gt;gtin&lt;/b&gt;, or &lt;b&gt;mpn&lt;/b&gt; parameter with a valid value. &lt;br /&gt;&lt;br /&gt; If you provide only the &lt;b&gt;category_ids&lt;/b&gt; parameter, you cannot specify a top-level (L1) category. &lt;/span&gt; (optional)
     * @param  string $fieldgroups The type of information to return in the response. &lt;br /&gt;&lt;br /&gt; &lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;strong&gt;Important:&lt;/strong&gt; This parameter may not produce valid results if you also provide more than one value for the &lt;b&gt;category_ids&lt;/b&gt; parameter. It is recommended that you avoid using this combination. &lt;/span&gt; &lt;br /&gt;&lt;br /&gt; &lt;b&gt; Valid Values: &lt;/b&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;ASPECT_REFINEMENTS&lt;/code&gt; &amp;mdash; This returns the &lt;b&gt;refinement&lt;/b&gt; container, which includes the category aspect and aspect value distributions that apply to the returned products. For example, if you searched for &lt;code&gt;Ford Mustang&lt;/code&gt;, some of the category aspects might be &lt;b&gt;Model Year&lt;/b&gt;, &lt;b&gt;Exterior Color&lt;/b&gt;, &lt;b&gt;Vehicle Mileage&lt;/b&gt;, and so on. &lt;br /&gt; &lt;br /&gt; &lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;b&gt;Note: &lt;/b&gt;Aspects are category specific.&lt;/span&gt; &lt;/li&gt; &lt;li&gt;&lt;code&gt;FULL&lt;/code&gt; &amp;mdash; This returns all the refinement containers and all the matching products. This value overrides the other values, which will be ignored.&lt;/li&gt; &lt;li&gt;&lt;code&gt;MATCHING_PRODUCTS&lt;/code&gt; &amp;mdash; This returns summaries for all products that match the values you provide for the &lt;b&gt;q&lt;/b&gt; and &lt;b&gt;category_ids&lt;/b&gt; parameters. This does not affect your use of the &lt;code&gt;ASPECT_REFINEMENTS&lt;/code&gt; value, which you can use in the same call.&lt;/li&gt; &lt;/ul&gt; Code so that your app gracefully handles any future changes to this list. &lt;br /&gt;&lt;br /&gt;&lt;b&gt;Default: &lt;/b&gt; &lt;code&gt;MATCHING_PRODUCTS&lt;/code&gt; (optional)
     * @param  string $gtin A string consisting of one or more comma-separated Global Trade Item Numbers (GTINs) that identify products to search for. Currently the GTIN values can include EAN, ISBN, and UPC identifier types. &lt;br /&gt;&lt;br /&gt; &lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;strong&gt;Note:&lt;/strong&gt; Although all query parameters are optional, this method must include at least the &lt;b&gt;q&lt;/b&gt; parameter, or the &lt;b&gt;category_ids&lt;/b&gt;, &lt;b&gt;gtin&lt;/b&gt;, or &lt;b&gt;mpn&lt;/b&gt; parameter with a valid value.  &lt;br /&gt;&lt;br /&gt; You cannot use the &lt;b&gt;gtin&lt;/b&gt; parameter in the same method with either the &lt;b&gt;q&lt;/b&gt; parameter or the &lt;b&gt;aspect_filter&lt;/b&gt; parameter. &lt;/span&gt; (optional)
     * @param  string $limit The number of product summaries to return. This is the &lt;i&gt;result set&lt;/i&gt;, a subset of the full collection of products that match the search or filter criteria of this call. &lt;br /&gt;&lt;br /&gt; &lt;b&gt;Maximum:&lt;/b&gt; &lt;code&gt;200&lt;/code&gt; &lt;br /&gt; &lt;b&gt;Default:&lt;/b&gt; &lt;code&gt;50&lt;/code&gt; (optional)
     * @param  string $mpn A string consisting of one or more comma-separated Manufacturer Part Numbers (MPNs) that identify products to search for. This method will return all products that have one of the specified MPNs. &lt;br /&gt;&lt;br /&gt; MPNs are defined by manufacturers for their own products, and are therefore certain to be unique only within a given brand. However, many MPNs do turn out to be globally unique. &lt;br /&gt;&lt;br /&gt; &lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;strong&gt;Note:&lt;/strong&gt; Although all query parameters are optional, this method must include at least the &lt;b&gt;q&lt;/b&gt; parameter, or the &lt;b&gt;category_ids&lt;/b&gt;, &lt;b&gt;gtin&lt;/b&gt;, or &lt;b&gt;mpn&lt;/b&gt; parameter with a valid value. &lt;br /&gt;&lt;br /&gt; You cannot use the &lt;b&gt;mpn&lt;/b&gt; parameter in the same method with either the &lt;b&gt;q&lt;/b&gt; parameter or the &lt;b&gt;aspect_filter&lt;/b&gt; parameter. &lt;/span&gt; (optional)
     * @param  string $offset This parameter is reserved for internal or future use. (optional)
     * @param  string $q A string consisting of one or more keywords to use to search for products in the eBay catalog. &lt;br /&gt;&lt;br /&gt; &lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;strong&gt;Note:&lt;/strong&gt; This method searches the following product record fields: &lt;b&gt;title&lt;/b&gt;, &lt;b&gt;description&lt;/b&gt;, &lt;b&gt;brand&lt;/b&gt;, and &lt;b&gt;aspects.localizedName&lt;/b&gt;, which do not include product IDs. Wildcard characters (e.g. &lt;code&gt;*&lt;/code&gt;) are not allowed. &lt;/span&gt; &lt;br /&gt;&lt;br /&gt; The keywords are handled as follows: &lt;ul&gt; &lt;li&gt;If the keywords are separated by a comma (e.g. &lt;code&gt;iPhone,256GB&lt;/code&gt;), the query returns products that have &lt;code&gt;iPhone&lt;/code&gt; &lt;b&gt;AND&lt;/b&gt; &lt;code&gt;256GB&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;If the keywords are separated by a space (e.g. &lt;code&gt;\&quot;iPhone&amp;nbsp;ipad\&quot;&lt;/code&gt; or &lt;code&gt;\&quot;iPhone,&amp;nbsp;ipad\&quot;&lt;/code&gt;), the query ignores any commas and returns products that have &lt;code&gt;iPhone&lt;/code&gt; &lt;b&gt;OR&lt;/b&gt; &lt;code&gt;iPad&lt;/code&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;strong&gt;Note:&lt;/strong&gt; Although all query parameters are optional, this method must include at least the &lt;b&gt;q&lt;/b&gt; parameter, or the &lt;b&gt;category_ids&lt;/b&gt;, &lt;b&gt;gtin&lt;/b&gt;, or &lt;b&gt;mpn&lt;/b&gt; parameter with a valid value.  &lt;br /&gt;&lt;br /&gt; You cannot use the &lt;b&gt;q&lt;/b&gt; parameter in the same method with either the &lt;b&gt;gtin&lt;/b&gt; parameter or the &lt;b&gt;mpn&lt;/b&gt; parameter. &lt;/span&gt; (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['search'] to see the possible values for this operation
     *
     * @throws \macropage\SDKs\ebay\rest\catalog\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return \macropage\SDKs\ebay\rest\catalog\Model\ProductSearchResponse
     */
    public function search($xEBAYCMARKETPLACEID = null, $aspectFilter = null, $categoryIds = null, $fieldgroups = null, $gtin = null, $limit = null, $mpn = null, $offset = null, $q = null, string $contentType = self::contentTypes['search'][0])
    {
        list($response) = $this->searchWithHttpInfo($xEBAYCMARKETPLACEID, $aspectFilter, $categoryIds, $fieldgroups, $gtin, $limit, $mpn, $offset, $q, $contentType);
        return $response;
    }

    /**
     * Operation searchWithHttpInfo
     *
     * @param  string $xEBAYCMARKETPLACEID This method also uses the &lt;code&gt;X-EBAY-C-MARKETPLACE-ID&lt;/code&gt; header to identify the seller&#39;s eBay marketplace. It is required for all marketplaces except EBAY_US, which is the default. &lt;b&gt;Note:&lt;/b&gt; This method is limited to &lt;code&gt;EBAY_US&lt;/code&gt;, &lt;code&gt;EBAY_AU&lt;/code&gt;, &lt;code&gt;EBAY_CA&lt;/code&gt;, and &lt;code&gt;EBAY_GB&lt;/code&gt; values. (optional)
     * @param  string $aspectFilter An eBay category and one or more aspects of that category, with the values that can be used to narrow down the collection of products returned by this call. &lt;br /&gt;&lt;br /&gt; Aspects are product attributes that can represent different types of information for different products. Every product has aspects, but different products have different sets of aspects. &lt;br /&gt;&lt;br /&gt; You can determine appropriate values for the aspects by first submitting this method without this parameter. It will return either the &lt;b&gt;productSummaries.aspects&lt;/b&gt; container, the &lt;b&gt;refinement.aspectDistributions&lt;/b&gt; container, or both, depending on the value of the &lt;b&gt;fieldgroups&lt;/b&gt; parameter in the request. The &lt;b&gt;productSummaries.aspects&lt;/b&gt; container provides the category aspects and their values that are associated with each returned product. The &lt;b&gt;refinement.aspectDistributions&lt;/b&gt; container provides information about the distribution of values of the set of category aspects associated with the specified categories. In both cases sellers can select from among the returned aspects to use with this parameter. &lt;br /&gt;&lt;br /&gt; &lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;strong&gt;Note:&lt;/strong&gt; You can also use the Taxonomy API&#39;s &lt;b&gt;getItemAspectsForCategory&lt;/b&gt; method to retrieve detailed information about aspects and their values that are appropriate for your selected category. &lt;/span&gt; &lt;br /&gt;&lt;br /&gt; The syntax for the &lt;b&gt;aspect_filter&lt;/b&gt; parameter is as follows (on several lines for readability; &lt;b&gt;categoryId&lt;/b&gt; is required): &lt;br /&gt;&lt;br /&gt; &lt;code&gt;aspect_filter&#x3D;categoryId:&lt;i&gt;category_id&lt;/i&gt;,&lt;br /&gt; &lt;i&gt;aspect1&lt;/i&gt;:{&lt;i&gt;valueA&lt;/i&gt;|&lt;i&gt;valueB&lt;/i&gt;|...},&lt;br /&gt; &lt;i&gt;aspect2&lt;/i&gt;:{&lt;i&gt;valueC&lt;/i&gt;|&lt;i&gt;valueD&lt;/i&gt;|...},.&lt;/code&gt; &lt;br /&gt;&lt;br /&gt; A matching product must be within the specified category, and it must have least one of the values identified for every specified aspect. &lt;br /&gt;&lt;br /&gt; &lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;strong&gt;Note:&lt;/strong&gt; Aspect names and values are case sensitive. &lt;/span&gt; &lt;br /&gt;&lt;br /&gt; Here is an example of an &lt;b&gt;aspect_filter&lt;/b&gt; parameter in which &lt;code&gt;9355&lt;/code&gt; is the category ID, &lt;code&gt;Color&lt;/code&gt; is an aspect of that category, and &lt;code&gt;Black&lt;/code&gt; and &lt;code&gt;White&lt;/code&gt; are possible values of that aspect (on several lines for readability): &lt;br /&gt;&lt;br /&gt; &lt;code&gt;GET https://api.ebay.com/commerce/catalog/v1_beta/product_summary/search?&lt;br /&gt; aspect_filter&#x3D;categoryId:9355,Color:{White|Black}&lt;/code&gt;    &lt;br /&gt;&lt;br /&gt; Here is the &lt;b&gt;aspect_filter&lt;/b&gt; with required URL encoding and a second aspect (on several lines for readability): &lt;br /&gt;&lt;br /&gt; &lt;code&gt;GET https://api.ebay.com/commerce/catalog/v1_beta/product_summary/search?&lt;br /&gt; aspect_filter&#x3D;categoryId:9355,Color:%7BWhite%7CBlack%7D,&lt;br /&gt; Storage%20Capacity:%128GB%7C256GB%7D&lt;/code&gt; &lt;br /&gt;&lt;br /&gt; &lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;strong&gt;Note:&lt;/strong&gt; You cannot use the &lt;b&gt;aspect_filter&lt;/b&gt; parameter in the same method with either the &lt;b&gt;gtin&lt;/b&gt; parameter or the &lt;b&gt;mpn&lt;/b&gt; parameter. &lt;/span&gt; For implementation help, refer to eBay API documentation at https://developer.ebay.com/api-docs/commerce/catalog/types/catal:AspectFilter (optional)
     * @param  string $categoryIds &lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;strong&gt;Important:&lt;/strong&gt; Currently, only the first &lt;b&gt;category_id&lt;/b&gt; value is accepted. &lt;/span&gt; &lt;br /&gt;&lt;br /&gt; One or more comma-separated category identifiers for narrowing down the collection of products returned by this call. &lt;br /&gt;&lt;br /&gt; &lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;strong&gt;Note:&lt;/strong&gt; This parameter requires a valid category ID value. You can use the Taxonomy API&#39;s &lt;b&gt;getCategorySuggestions&lt;/b&gt; method to retrieve appropriate category IDs for your product based on keywords. &lt;/span&gt; &lt;br /&gt;&lt;br /&gt; The syntax for this parameter is as follows: &lt;br /&gt;&lt;br /&gt; &lt;code&gt;category_ids&#x3D;&lt;i&gt;category_id1&lt;/i&gt;,&lt;i&gt;category_id2&lt;/i&gt;,.&lt;/code&gt; &lt;br /&gt;&lt;br /&gt; Here is an example of a method with the &lt;b&gt;category_ids&lt;/b&gt; parameter: br /&gt;&lt;br /&gt; &lt;code&gt;GET https://api.ebay.com/commerce/catalog/v1_beta/product_summary/search?&lt;br /&gt; category_ids&#x3D;178893&lt;/code&gt; &lt;br /&gt;&lt;br /&gt; &lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;strong&gt;Note:&lt;/strong&gt; Although all query parameters are optional, this method must include at least the &lt;b&gt;q&lt;/b&gt; parameter, or the &lt;b&gt;category_ids&lt;/b&gt;, &lt;b&gt;gtin&lt;/b&gt;, or &lt;b&gt;mpn&lt;/b&gt; parameter with a valid value. &lt;br /&gt;&lt;br /&gt; If you provide only the &lt;b&gt;category_ids&lt;/b&gt; parameter, you cannot specify a top-level (L1) category. &lt;/span&gt; (optional)
     * @param  string $fieldgroups The type of information to return in the response. &lt;br /&gt;&lt;br /&gt; &lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;strong&gt;Important:&lt;/strong&gt; This parameter may not produce valid results if you also provide more than one value for the &lt;b&gt;category_ids&lt;/b&gt; parameter. It is recommended that you avoid using this combination. &lt;/span&gt; &lt;br /&gt;&lt;br /&gt; &lt;b&gt; Valid Values: &lt;/b&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;ASPECT_REFINEMENTS&lt;/code&gt; &amp;mdash; This returns the &lt;b&gt;refinement&lt;/b&gt; container, which includes the category aspect and aspect value distributions that apply to the returned products. For example, if you searched for &lt;code&gt;Ford Mustang&lt;/code&gt;, some of the category aspects might be &lt;b&gt;Model Year&lt;/b&gt;, &lt;b&gt;Exterior Color&lt;/b&gt;, &lt;b&gt;Vehicle Mileage&lt;/b&gt;, and so on. &lt;br /&gt; &lt;br /&gt; &lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;b&gt;Note: &lt;/b&gt;Aspects are category specific.&lt;/span&gt; &lt;/li&gt; &lt;li&gt;&lt;code&gt;FULL&lt;/code&gt; &amp;mdash; This returns all the refinement containers and all the matching products. This value overrides the other values, which will be ignored.&lt;/li&gt; &lt;li&gt;&lt;code&gt;MATCHING_PRODUCTS&lt;/code&gt; &amp;mdash; This returns summaries for all products that match the values you provide for the &lt;b&gt;q&lt;/b&gt; and &lt;b&gt;category_ids&lt;/b&gt; parameters. This does not affect your use of the &lt;code&gt;ASPECT_REFINEMENTS&lt;/code&gt; value, which you can use in the same call.&lt;/li&gt; &lt;/ul&gt; Code so that your app gracefully handles any future changes to this list. &lt;br /&gt;&lt;br /&gt;&lt;b&gt;Default: &lt;/b&gt; &lt;code&gt;MATCHING_PRODUCTS&lt;/code&gt; (optional)
     * @param  string $gtin A string consisting of one or more comma-separated Global Trade Item Numbers (GTINs) that identify products to search for. Currently the GTIN values can include EAN, ISBN, and UPC identifier types. &lt;br /&gt;&lt;br /&gt; &lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;strong&gt;Note:&lt;/strong&gt; Although all query parameters are optional, this method must include at least the &lt;b&gt;q&lt;/b&gt; parameter, or the &lt;b&gt;category_ids&lt;/b&gt;, &lt;b&gt;gtin&lt;/b&gt;, or &lt;b&gt;mpn&lt;/b&gt; parameter with a valid value.  &lt;br /&gt;&lt;br /&gt; You cannot use the &lt;b&gt;gtin&lt;/b&gt; parameter in the same method with either the &lt;b&gt;q&lt;/b&gt; parameter or the &lt;b&gt;aspect_filter&lt;/b&gt; parameter. &lt;/span&gt; (optional)
     * @param  string $limit The number of product summaries to return. This is the &lt;i&gt;result set&lt;/i&gt;, a subset of the full collection of products that match the search or filter criteria of this call. &lt;br /&gt;&lt;br /&gt; &lt;b&gt;Maximum:&lt;/b&gt; &lt;code&gt;200&lt;/code&gt; &lt;br /&gt; &lt;b&gt;Default:&lt;/b&gt; &lt;code&gt;50&lt;/code&gt; (optional)
     * @param  string $mpn A string consisting of one or more comma-separated Manufacturer Part Numbers (MPNs) that identify products to search for. This method will return all products that have one of the specified MPNs. &lt;br /&gt;&lt;br /&gt; MPNs are defined by manufacturers for their own products, and are therefore certain to be unique only within a given brand. However, many MPNs do turn out to be globally unique. &lt;br /&gt;&lt;br /&gt; &lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;strong&gt;Note:&lt;/strong&gt; Although all query parameters are optional, this method must include at least the &lt;b&gt;q&lt;/b&gt; parameter, or the &lt;b&gt;category_ids&lt;/b&gt;, &lt;b&gt;gtin&lt;/b&gt;, or &lt;b&gt;mpn&lt;/b&gt; parameter with a valid value. &lt;br /&gt;&lt;br /&gt; You cannot use the &lt;b&gt;mpn&lt;/b&gt; parameter in the same method with either the &lt;b&gt;q&lt;/b&gt; parameter or the &lt;b&gt;aspect_filter&lt;/b&gt; parameter. &lt;/span&gt; (optional)
     * @param  string $offset This parameter is reserved for internal or future use. (optional)
     * @param  string $q A string consisting of one or more keywords to use to search for products in the eBay catalog. &lt;br /&gt;&lt;br /&gt; &lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;strong&gt;Note:&lt;/strong&gt; This method searches the following product record fields: &lt;b&gt;title&lt;/b&gt;, &lt;b&gt;description&lt;/b&gt;, &lt;b&gt;brand&lt;/b&gt;, and &lt;b&gt;aspects.localizedName&lt;/b&gt;, which do not include product IDs. Wildcard characters (e.g. &lt;code&gt;*&lt;/code&gt;) are not allowed. &lt;/span&gt; &lt;br /&gt;&lt;br /&gt; The keywords are handled as follows: &lt;ul&gt; &lt;li&gt;If the keywords are separated by a comma (e.g. &lt;code&gt;iPhone,256GB&lt;/code&gt;), the query returns products that have &lt;code&gt;iPhone&lt;/code&gt; &lt;b&gt;AND&lt;/b&gt; &lt;code&gt;256GB&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;If the keywords are separated by a space (e.g. &lt;code&gt;\&quot;iPhone&amp;nbsp;ipad\&quot;&lt;/code&gt; or &lt;code&gt;\&quot;iPhone,&amp;nbsp;ipad\&quot;&lt;/code&gt;), the query ignores any commas and returns products that have &lt;code&gt;iPhone&lt;/code&gt; &lt;b&gt;OR&lt;/b&gt; &lt;code&gt;iPad&lt;/code&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;strong&gt;Note:&lt;/strong&gt; Although all query parameters are optional, this method must include at least the &lt;b&gt;q&lt;/b&gt; parameter, or the &lt;b&gt;category_ids&lt;/b&gt;, &lt;b&gt;gtin&lt;/b&gt;, or &lt;b&gt;mpn&lt;/b&gt; parameter with a valid value.  &lt;br /&gt;&lt;br /&gt; You cannot use the &lt;b&gt;q&lt;/b&gt; parameter in the same method with either the &lt;b&gt;gtin&lt;/b&gt; parameter or the &lt;b&gt;mpn&lt;/b&gt; parameter. &lt;/span&gt; (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['search'] to see the possible values for this operation
     *
     * @throws \macropage\SDKs\ebay\rest\catalog\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return array of \macropage\SDKs\ebay\rest\catalog\Model\ProductSearchResponse, HTTP status code, HTTP response headers (array of strings)
     */
    public function searchWithHttpInfo($xEBAYCMARKETPLACEID = null, $aspectFilter = null, $categoryIds = null, $fieldgroups = null, $gtin = null, $limit = null, $mpn = null, $offset = null, $q = null, string $contentType = self::contentTypes['search'][0])
    {
        $request = $this->searchRequest($xEBAYCMARKETPLACEID, $aspectFilter, $categoryIds, $fieldgroups, $gtin, $limit, $mpn, $offset, $q, $contentType);

        try {
            $options = $this->createHttpClientOption();
            try {
                $response = $this->client->send($request, $options);
            } catch (RequestException $e) {
                throw new ApiException(
                    "[{$e->getCode()}] {$e->getMessage()}",
                    (int) $e->getCode(),
                    $e->getResponse() ? $e->getResponse()->getHeaders() : null,
                    $e->getResponse() ? (string) $e->getResponse()->getBody() : null
                );
            } catch (ConnectException $e) {
                throw new ApiException(
                    "[{$e->getCode()}] {$e->getMessage()}",
                    (int) $e->getCode(),
                    null,
                    null
                );
            }

            $statusCode = $response->getStatusCode();

            if ($statusCode < 200 || $statusCode > 299) {
                throw new ApiException(
                    sprintf(
                        '[%d] Error connecting to the API (%s)',
                        $statusCode,
                        (string) $request->getUri()
                    ),
                    $statusCode,
                    $response->getHeaders(),
                    (string) $response->getBody()
                );
            }

            switch($statusCode) {
                case 200:
                    if ('\macropage\SDKs\ebay\rest\catalog\Model\ProductSearchResponse' === '\SplFileObject') {
                        $content = $response->getBody(); //stream goes to serializer
                    } else {
                        $content = (string) $response->getBody();
                        if ('\macropage\SDKs\ebay\rest\catalog\Model\ProductSearchResponse' !== 'string') {
                            $content = json_decode($content);
                        }
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\macropage\SDKs\ebay\rest\catalog\Model\ProductSearchResponse', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
            }

            $returnType = '\macropage\SDKs\ebay\rest\catalog\Model\ProductSearchResponse';
            if ($returnType === '\SplFileObject') {
                $content = $response->getBody(); //stream goes to serializer
            } else {
                $content = (string) $response->getBody();
                if ($returnType !== 'string') {
                    $content = json_decode($content);
                }
            }

            return [
                ObjectSerializer::deserialize($content, $returnType, []),
                $response->getStatusCode(),
                $response->getHeaders()
            ];

        } catch (ApiException $e) {
            switch ($e->getCode()) {
                case 200:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\macropage\SDKs\ebay\rest\catalog\Model\ProductSearchResponse',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
            }
            throw $e;
        }
    }

    /**
     * Operation searchAsync
     *
     * @param  string $xEBAYCMARKETPLACEID This method also uses the &lt;code&gt;X-EBAY-C-MARKETPLACE-ID&lt;/code&gt; header to identify the seller&#39;s eBay marketplace. It is required for all marketplaces except EBAY_US, which is the default. &lt;b&gt;Note:&lt;/b&gt; This method is limited to &lt;code&gt;EBAY_US&lt;/code&gt;, &lt;code&gt;EBAY_AU&lt;/code&gt;, &lt;code&gt;EBAY_CA&lt;/code&gt;, and &lt;code&gt;EBAY_GB&lt;/code&gt; values. (optional)
     * @param  string $aspectFilter An eBay category and one or more aspects of that category, with the values that can be used to narrow down the collection of products returned by this call. &lt;br /&gt;&lt;br /&gt; Aspects are product attributes that can represent different types of information for different products. Every product has aspects, but different products have different sets of aspects. &lt;br /&gt;&lt;br /&gt; You can determine appropriate values for the aspects by first submitting this method without this parameter. It will return either the &lt;b&gt;productSummaries.aspects&lt;/b&gt; container, the &lt;b&gt;refinement.aspectDistributions&lt;/b&gt; container, or both, depending on the value of the &lt;b&gt;fieldgroups&lt;/b&gt; parameter in the request. The &lt;b&gt;productSummaries.aspects&lt;/b&gt; container provides the category aspects and their values that are associated with each returned product. The &lt;b&gt;refinement.aspectDistributions&lt;/b&gt; container provides information about the distribution of values of the set of category aspects associated with the specified categories. In both cases sellers can select from among the returned aspects to use with this parameter. &lt;br /&gt;&lt;br /&gt; &lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;strong&gt;Note:&lt;/strong&gt; You can also use the Taxonomy API&#39;s &lt;b&gt;getItemAspectsForCategory&lt;/b&gt; method to retrieve detailed information about aspects and their values that are appropriate for your selected category. &lt;/span&gt; &lt;br /&gt;&lt;br /&gt; The syntax for the &lt;b&gt;aspect_filter&lt;/b&gt; parameter is as follows (on several lines for readability; &lt;b&gt;categoryId&lt;/b&gt; is required): &lt;br /&gt;&lt;br /&gt; &lt;code&gt;aspect_filter&#x3D;categoryId:&lt;i&gt;category_id&lt;/i&gt;,&lt;br /&gt; &lt;i&gt;aspect1&lt;/i&gt;:{&lt;i&gt;valueA&lt;/i&gt;|&lt;i&gt;valueB&lt;/i&gt;|...},&lt;br /&gt; &lt;i&gt;aspect2&lt;/i&gt;:{&lt;i&gt;valueC&lt;/i&gt;|&lt;i&gt;valueD&lt;/i&gt;|...},.&lt;/code&gt; &lt;br /&gt;&lt;br /&gt; A matching product must be within the specified category, and it must have least one of the values identified for every specified aspect. &lt;br /&gt;&lt;br /&gt; &lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;strong&gt;Note:&lt;/strong&gt; Aspect names and values are case sensitive. &lt;/span&gt; &lt;br /&gt;&lt;br /&gt; Here is an example of an &lt;b&gt;aspect_filter&lt;/b&gt; parameter in which &lt;code&gt;9355&lt;/code&gt; is the category ID, &lt;code&gt;Color&lt;/code&gt; is an aspect of that category, and &lt;code&gt;Black&lt;/code&gt; and &lt;code&gt;White&lt;/code&gt; are possible values of that aspect (on several lines for readability): &lt;br /&gt;&lt;br /&gt; &lt;code&gt;GET https://api.ebay.com/commerce/catalog/v1_beta/product_summary/search?&lt;br /&gt; aspect_filter&#x3D;categoryId:9355,Color:{White|Black}&lt;/code&gt;    &lt;br /&gt;&lt;br /&gt; Here is the &lt;b&gt;aspect_filter&lt;/b&gt; with required URL encoding and a second aspect (on several lines for readability): &lt;br /&gt;&lt;br /&gt; &lt;code&gt;GET https://api.ebay.com/commerce/catalog/v1_beta/product_summary/search?&lt;br /&gt; aspect_filter&#x3D;categoryId:9355,Color:%7BWhite%7CBlack%7D,&lt;br /&gt; Storage%20Capacity:%128GB%7C256GB%7D&lt;/code&gt; &lt;br /&gt;&lt;br /&gt; &lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;strong&gt;Note:&lt;/strong&gt; You cannot use the &lt;b&gt;aspect_filter&lt;/b&gt; parameter in the same method with either the &lt;b&gt;gtin&lt;/b&gt; parameter or the &lt;b&gt;mpn&lt;/b&gt; parameter. &lt;/span&gt; For implementation help, refer to eBay API documentation at https://developer.ebay.com/api-docs/commerce/catalog/types/catal:AspectFilter (optional)
     * @param  string $categoryIds &lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;strong&gt;Important:&lt;/strong&gt; Currently, only the first &lt;b&gt;category_id&lt;/b&gt; value is accepted. &lt;/span&gt; &lt;br /&gt;&lt;br /&gt; One or more comma-separated category identifiers for narrowing down the collection of products returned by this call. &lt;br /&gt;&lt;br /&gt; &lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;strong&gt;Note:&lt;/strong&gt; This parameter requires a valid category ID value. You can use the Taxonomy API&#39;s &lt;b&gt;getCategorySuggestions&lt;/b&gt; method to retrieve appropriate category IDs for your product based on keywords. &lt;/span&gt; &lt;br /&gt;&lt;br /&gt; The syntax for this parameter is as follows: &lt;br /&gt;&lt;br /&gt; &lt;code&gt;category_ids&#x3D;&lt;i&gt;category_id1&lt;/i&gt;,&lt;i&gt;category_id2&lt;/i&gt;,.&lt;/code&gt; &lt;br /&gt;&lt;br /&gt; Here is an example of a method with the &lt;b&gt;category_ids&lt;/b&gt; parameter: br /&gt;&lt;br /&gt; &lt;code&gt;GET https://api.ebay.com/commerce/catalog/v1_beta/product_summary/search?&lt;br /&gt; category_ids&#x3D;178893&lt;/code&gt; &lt;br /&gt;&lt;br /&gt; &lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;strong&gt;Note:&lt;/strong&gt; Although all query parameters are optional, this method must include at least the &lt;b&gt;q&lt;/b&gt; parameter, or the &lt;b&gt;category_ids&lt;/b&gt;, &lt;b&gt;gtin&lt;/b&gt;, or &lt;b&gt;mpn&lt;/b&gt; parameter with a valid value. &lt;br /&gt;&lt;br /&gt; If you provide only the &lt;b&gt;category_ids&lt;/b&gt; parameter, you cannot specify a top-level (L1) category. &lt;/span&gt; (optional)
     * @param  string $fieldgroups The type of information to return in the response. &lt;br /&gt;&lt;br /&gt; &lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;strong&gt;Important:&lt;/strong&gt; This parameter may not produce valid results if you also provide more than one value for the &lt;b&gt;category_ids&lt;/b&gt; parameter. It is recommended that you avoid using this combination. &lt;/span&gt; &lt;br /&gt;&lt;br /&gt; &lt;b&gt; Valid Values: &lt;/b&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;ASPECT_REFINEMENTS&lt;/code&gt; &amp;mdash; This returns the &lt;b&gt;refinement&lt;/b&gt; container, which includes the category aspect and aspect value distributions that apply to the returned products. For example, if you searched for &lt;code&gt;Ford Mustang&lt;/code&gt;, some of the category aspects might be &lt;b&gt;Model Year&lt;/b&gt;, &lt;b&gt;Exterior Color&lt;/b&gt;, &lt;b&gt;Vehicle Mileage&lt;/b&gt;, and so on. &lt;br /&gt; &lt;br /&gt; &lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;b&gt;Note: &lt;/b&gt;Aspects are category specific.&lt;/span&gt; &lt;/li&gt; &lt;li&gt;&lt;code&gt;FULL&lt;/code&gt; &amp;mdash; This returns all the refinement containers and all the matching products. This value overrides the other values, which will be ignored.&lt;/li&gt; &lt;li&gt;&lt;code&gt;MATCHING_PRODUCTS&lt;/code&gt; &amp;mdash; This returns summaries for all products that match the values you provide for the &lt;b&gt;q&lt;/b&gt; and &lt;b&gt;category_ids&lt;/b&gt; parameters. This does not affect your use of the &lt;code&gt;ASPECT_REFINEMENTS&lt;/code&gt; value, which you can use in the same call.&lt;/li&gt; &lt;/ul&gt; Code so that your app gracefully handles any future changes to this list. &lt;br /&gt;&lt;br /&gt;&lt;b&gt;Default: &lt;/b&gt; &lt;code&gt;MATCHING_PRODUCTS&lt;/code&gt; (optional)
     * @param  string $gtin A string consisting of one or more comma-separated Global Trade Item Numbers (GTINs) that identify products to search for. Currently the GTIN values can include EAN, ISBN, and UPC identifier types. &lt;br /&gt;&lt;br /&gt; &lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;strong&gt;Note:&lt;/strong&gt; Although all query parameters are optional, this method must include at least the &lt;b&gt;q&lt;/b&gt; parameter, or the &lt;b&gt;category_ids&lt;/b&gt;, &lt;b&gt;gtin&lt;/b&gt;, or &lt;b&gt;mpn&lt;/b&gt; parameter with a valid value.  &lt;br /&gt;&lt;br /&gt; You cannot use the &lt;b&gt;gtin&lt;/b&gt; parameter in the same method with either the &lt;b&gt;q&lt;/b&gt; parameter or the &lt;b&gt;aspect_filter&lt;/b&gt; parameter. &lt;/span&gt; (optional)
     * @param  string $limit The number of product summaries to return. This is the &lt;i&gt;result set&lt;/i&gt;, a subset of the full collection of products that match the search or filter criteria of this call. &lt;br /&gt;&lt;br /&gt; &lt;b&gt;Maximum:&lt;/b&gt; &lt;code&gt;200&lt;/code&gt; &lt;br /&gt; &lt;b&gt;Default:&lt;/b&gt; &lt;code&gt;50&lt;/code&gt; (optional)
     * @param  string $mpn A string consisting of one or more comma-separated Manufacturer Part Numbers (MPNs) that identify products to search for. This method will return all products that have one of the specified MPNs. &lt;br /&gt;&lt;br /&gt; MPNs are defined by manufacturers for their own products, and are therefore certain to be unique only within a given brand. However, many MPNs do turn out to be globally unique. &lt;br /&gt;&lt;br /&gt; &lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;strong&gt;Note:&lt;/strong&gt; Although all query parameters are optional, this method must include at least the &lt;b&gt;q&lt;/b&gt; parameter, or the &lt;b&gt;category_ids&lt;/b&gt;, &lt;b&gt;gtin&lt;/b&gt;, or &lt;b&gt;mpn&lt;/b&gt; parameter with a valid value. &lt;br /&gt;&lt;br /&gt; You cannot use the &lt;b&gt;mpn&lt;/b&gt; parameter in the same method with either the &lt;b&gt;q&lt;/b&gt; parameter or the &lt;b&gt;aspect_filter&lt;/b&gt; parameter. &lt;/span&gt; (optional)
     * @param  string $offset This parameter is reserved for internal or future use. (optional)
     * @param  string $q A string consisting of one or more keywords to use to search for products in the eBay catalog. &lt;br /&gt;&lt;br /&gt; &lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;strong&gt;Note:&lt;/strong&gt; This method searches the following product record fields: &lt;b&gt;title&lt;/b&gt;, &lt;b&gt;description&lt;/b&gt;, &lt;b&gt;brand&lt;/b&gt;, and &lt;b&gt;aspects.localizedName&lt;/b&gt;, which do not include product IDs. Wildcard characters (e.g. &lt;code&gt;*&lt;/code&gt;) are not allowed. &lt;/span&gt; &lt;br /&gt;&lt;br /&gt; The keywords are handled as follows: &lt;ul&gt; &lt;li&gt;If the keywords are separated by a comma (e.g. &lt;code&gt;iPhone,256GB&lt;/code&gt;), the query returns products that have &lt;code&gt;iPhone&lt;/code&gt; &lt;b&gt;AND&lt;/b&gt; &lt;code&gt;256GB&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;If the keywords are separated by a space (e.g. &lt;code&gt;\&quot;iPhone&amp;nbsp;ipad\&quot;&lt;/code&gt; or &lt;code&gt;\&quot;iPhone,&amp;nbsp;ipad\&quot;&lt;/code&gt;), the query ignores any commas and returns products that have &lt;code&gt;iPhone&lt;/code&gt; &lt;b&gt;OR&lt;/b&gt; &lt;code&gt;iPad&lt;/code&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;strong&gt;Note:&lt;/strong&gt; Although all query parameters are optional, this method must include at least the &lt;b&gt;q&lt;/b&gt; parameter, or the &lt;b&gt;category_ids&lt;/b&gt;, &lt;b&gt;gtin&lt;/b&gt;, or &lt;b&gt;mpn&lt;/b&gt; parameter with a valid value.  &lt;br /&gt;&lt;br /&gt; You cannot use the &lt;b&gt;q&lt;/b&gt; parameter in the same method with either the &lt;b&gt;gtin&lt;/b&gt; parameter or the &lt;b&gt;mpn&lt;/b&gt; parameter. &lt;/span&gt; (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['search'] to see the possible values for this operation
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function searchAsync($xEBAYCMARKETPLACEID = null, $aspectFilter = null, $categoryIds = null, $fieldgroups = null, $gtin = null, $limit = null, $mpn = null, $offset = null, $q = null, string $contentType = self::contentTypes['search'][0])
    {
        return $this->searchAsyncWithHttpInfo($xEBAYCMARKETPLACEID, $aspectFilter, $categoryIds, $fieldgroups, $gtin, $limit, $mpn, $offset, $q, $contentType)
            ->then(
                function ($response) {
                    return $response[0];
                }
            );
    }

    /**
     * Operation searchAsyncWithHttpInfo
     *
     * @param  string $xEBAYCMARKETPLACEID This method also uses the &lt;code&gt;X-EBAY-C-MARKETPLACE-ID&lt;/code&gt; header to identify the seller&#39;s eBay marketplace. It is required for all marketplaces except EBAY_US, which is the default. &lt;b&gt;Note:&lt;/b&gt; This method is limited to &lt;code&gt;EBAY_US&lt;/code&gt;, &lt;code&gt;EBAY_AU&lt;/code&gt;, &lt;code&gt;EBAY_CA&lt;/code&gt;, and &lt;code&gt;EBAY_GB&lt;/code&gt; values. (optional)
     * @param  string $aspectFilter An eBay category and one or more aspects of that category, with the values that can be used to narrow down the collection of products returned by this call. &lt;br /&gt;&lt;br /&gt; Aspects are product attributes that can represent different types of information for different products. Every product has aspects, but different products have different sets of aspects. &lt;br /&gt;&lt;br /&gt; You can determine appropriate values for the aspects by first submitting this method without this parameter. It will return either the &lt;b&gt;productSummaries.aspects&lt;/b&gt; container, the &lt;b&gt;refinement.aspectDistributions&lt;/b&gt; container, or both, depending on the value of the &lt;b&gt;fieldgroups&lt;/b&gt; parameter in the request. The &lt;b&gt;productSummaries.aspects&lt;/b&gt; container provides the category aspects and their values that are associated with each returned product. The &lt;b&gt;refinement.aspectDistributions&lt;/b&gt; container provides information about the distribution of values of the set of category aspects associated with the specified categories. In both cases sellers can select from among the returned aspects to use with this parameter. &lt;br /&gt;&lt;br /&gt; &lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;strong&gt;Note:&lt;/strong&gt; You can also use the Taxonomy API&#39;s &lt;b&gt;getItemAspectsForCategory&lt;/b&gt; method to retrieve detailed information about aspects and their values that are appropriate for your selected category. &lt;/span&gt; &lt;br /&gt;&lt;br /&gt; The syntax for the &lt;b&gt;aspect_filter&lt;/b&gt; parameter is as follows (on several lines for readability; &lt;b&gt;categoryId&lt;/b&gt; is required): &lt;br /&gt;&lt;br /&gt; &lt;code&gt;aspect_filter&#x3D;categoryId:&lt;i&gt;category_id&lt;/i&gt;,&lt;br /&gt; &lt;i&gt;aspect1&lt;/i&gt;:{&lt;i&gt;valueA&lt;/i&gt;|&lt;i&gt;valueB&lt;/i&gt;|...},&lt;br /&gt; &lt;i&gt;aspect2&lt;/i&gt;:{&lt;i&gt;valueC&lt;/i&gt;|&lt;i&gt;valueD&lt;/i&gt;|...},.&lt;/code&gt; &lt;br /&gt;&lt;br /&gt; A matching product must be within the specified category, and it must have least one of the values identified for every specified aspect. &lt;br /&gt;&lt;br /&gt; &lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;strong&gt;Note:&lt;/strong&gt; Aspect names and values are case sensitive. &lt;/span&gt; &lt;br /&gt;&lt;br /&gt; Here is an example of an &lt;b&gt;aspect_filter&lt;/b&gt; parameter in which &lt;code&gt;9355&lt;/code&gt; is the category ID, &lt;code&gt;Color&lt;/code&gt; is an aspect of that category, and &lt;code&gt;Black&lt;/code&gt; and &lt;code&gt;White&lt;/code&gt; are possible values of that aspect (on several lines for readability): &lt;br /&gt;&lt;br /&gt; &lt;code&gt;GET https://api.ebay.com/commerce/catalog/v1_beta/product_summary/search?&lt;br /&gt; aspect_filter&#x3D;categoryId:9355,Color:{White|Black}&lt;/code&gt;    &lt;br /&gt;&lt;br /&gt; Here is the &lt;b&gt;aspect_filter&lt;/b&gt; with required URL encoding and a second aspect (on several lines for readability): &lt;br /&gt;&lt;br /&gt; &lt;code&gt;GET https://api.ebay.com/commerce/catalog/v1_beta/product_summary/search?&lt;br /&gt; aspect_filter&#x3D;categoryId:9355,Color:%7BWhite%7CBlack%7D,&lt;br /&gt; Storage%20Capacity:%128GB%7C256GB%7D&lt;/code&gt; &lt;br /&gt;&lt;br /&gt; &lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;strong&gt;Note:&lt;/strong&gt; You cannot use the &lt;b&gt;aspect_filter&lt;/b&gt; parameter in the same method with either the &lt;b&gt;gtin&lt;/b&gt; parameter or the &lt;b&gt;mpn&lt;/b&gt; parameter. &lt;/span&gt; For implementation help, refer to eBay API documentation at https://developer.ebay.com/api-docs/commerce/catalog/types/catal:AspectFilter (optional)
     * @param  string $categoryIds &lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;strong&gt;Important:&lt;/strong&gt; Currently, only the first &lt;b&gt;category_id&lt;/b&gt; value is accepted. &lt;/span&gt; &lt;br /&gt;&lt;br /&gt; One or more comma-separated category identifiers for narrowing down the collection of products returned by this call. &lt;br /&gt;&lt;br /&gt; &lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;strong&gt;Note:&lt;/strong&gt; This parameter requires a valid category ID value. You can use the Taxonomy API&#39;s &lt;b&gt;getCategorySuggestions&lt;/b&gt; method to retrieve appropriate category IDs for your product based on keywords. &lt;/span&gt; &lt;br /&gt;&lt;br /&gt; The syntax for this parameter is as follows: &lt;br /&gt;&lt;br /&gt; &lt;code&gt;category_ids&#x3D;&lt;i&gt;category_id1&lt;/i&gt;,&lt;i&gt;category_id2&lt;/i&gt;,.&lt;/code&gt; &lt;br /&gt;&lt;br /&gt; Here is an example of a method with the &lt;b&gt;category_ids&lt;/b&gt; parameter: br /&gt;&lt;br /&gt; &lt;code&gt;GET https://api.ebay.com/commerce/catalog/v1_beta/product_summary/search?&lt;br /&gt; category_ids&#x3D;178893&lt;/code&gt; &lt;br /&gt;&lt;br /&gt; &lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;strong&gt;Note:&lt;/strong&gt; Although all query parameters are optional, this method must include at least the &lt;b&gt;q&lt;/b&gt; parameter, or the &lt;b&gt;category_ids&lt;/b&gt;, &lt;b&gt;gtin&lt;/b&gt;, or &lt;b&gt;mpn&lt;/b&gt; parameter with a valid value. &lt;br /&gt;&lt;br /&gt; If you provide only the &lt;b&gt;category_ids&lt;/b&gt; parameter, you cannot specify a top-level (L1) category. &lt;/span&gt; (optional)
     * @param  string $fieldgroups The type of information to return in the response. &lt;br /&gt;&lt;br /&gt; &lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;strong&gt;Important:&lt;/strong&gt; This parameter may not produce valid results if you also provide more than one value for the &lt;b&gt;category_ids&lt;/b&gt; parameter. It is recommended that you avoid using this combination. &lt;/span&gt; &lt;br /&gt;&lt;br /&gt; &lt;b&gt; Valid Values: &lt;/b&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;ASPECT_REFINEMENTS&lt;/code&gt; &amp;mdash; This returns the &lt;b&gt;refinement&lt;/b&gt; container, which includes the category aspect and aspect value distributions that apply to the returned products. For example, if you searched for &lt;code&gt;Ford Mustang&lt;/code&gt;, some of the category aspects might be &lt;b&gt;Model Year&lt;/b&gt;, &lt;b&gt;Exterior Color&lt;/b&gt;, &lt;b&gt;Vehicle Mileage&lt;/b&gt;, and so on. &lt;br /&gt; &lt;br /&gt; &lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;b&gt;Note: &lt;/b&gt;Aspects are category specific.&lt;/span&gt; &lt;/li&gt; &lt;li&gt;&lt;code&gt;FULL&lt;/code&gt; &amp;mdash; This returns all the refinement containers and all the matching products. This value overrides the other values, which will be ignored.&lt;/li&gt; &lt;li&gt;&lt;code&gt;MATCHING_PRODUCTS&lt;/code&gt; &amp;mdash; This returns summaries for all products that match the values you provide for the &lt;b&gt;q&lt;/b&gt; and &lt;b&gt;category_ids&lt;/b&gt; parameters. This does not affect your use of the &lt;code&gt;ASPECT_REFINEMENTS&lt;/code&gt; value, which you can use in the same call.&lt;/li&gt; &lt;/ul&gt; Code so that your app gracefully handles any future changes to this list. &lt;br /&gt;&lt;br /&gt;&lt;b&gt;Default: &lt;/b&gt; &lt;code&gt;MATCHING_PRODUCTS&lt;/code&gt; (optional)
     * @param  string $gtin A string consisting of one or more comma-separated Global Trade Item Numbers (GTINs) that identify products to search for. Currently the GTIN values can include EAN, ISBN, and UPC identifier types. &lt;br /&gt;&lt;br /&gt; &lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;strong&gt;Note:&lt;/strong&gt; Although all query parameters are optional, this method must include at least the &lt;b&gt;q&lt;/b&gt; parameter, or the &lt;b&gt;category_ids&lt;/b&gt;, &lt;b&gt;gtin&lt;/b&gt;, or &lt;b&gt;mpn&lt;/b&gt; parameter with a valid value.  &lt;br /&gt;&lt;br /&gt; You cannot use the &lt;b&gt;gtin&lt;/b&gt; parameter in the same method with either the &lt;b&gt;q&lt;/b&gt; parameter or the &lt;b&gt;aspect_filter&lt;/b&gt; parameter. &lt;/span&gt; (optional)
     * @param  string $limit The number of product summaries to return. This is the &lt;i&gt;result set&lt;/i&gt;, a subset of the full collection of products that match the search or filter criteria of this call. &lt;br /&gt;&lt;br /&gt; &lt;b&gt;Maximum:&lt;/b&gt; &lt;code&gt;200&lt;/code&gt; &lt;br /&gt; &lt;b&gt;Default:&lt;/b&gt; &lt;code&gt;50&lt;/code&gt; (optional)
     * @param  string $mpn A string consisting of one or more comma-separated Manufacturer Part Numbers (MPNs) that identify products to search for. This method will return all products that have one of the specified MPNs. &lt;br /&gt;&lt;br /&gt; MPNs are defined by manufacturers for their own products, and are therefore certain to be unique only within a given brand. However, many MPNs do turn out to be globally unique. &lt;br /&gt;&lt;br /&gt; &lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;strong&gt;Note:&lt;/strong&gt; Although all query parameters are optional, this method must include at least the &lt;b&gt;q&lt;/b&gt; parameter, or the &lt;b&gt;category_ids&lt;/b&gt;, &lt;b&gt;gtin&lt;/b&gt;, or &lt;b&gt;mpn&lt;/b&gt; parameter with a valid value. &lt;br /&gt;&lt;br /&gt; You cannot use the &lt;b&gt;mpn&lt;/b&gt; parameter in the same method with either the &lt;b&gt;q&lt;/b&gt; parameter or the &lt;b&gt;aspect_filter&lt;/b&gt; parameter. &lt;/span&gt; (optional)
     * @param  string $offset This parameter is reserved for internal or future use. (optional)
     * @param  string $q A string consisting of one or more keywords to use to search for products in the eBay catalog. &lt;br /&gt;&lt;br /&gt; &lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;strong&gt;Note:&lt;/strong&gt; This method searches the following product record fields: &lt;b&gt;title&lt;/b&gt;, &lt;b&gt;description&lt;/b&gt;, &lt;b&gt;brand&lt;/b&gt;, and &lt;b&gt;aspects.localizedName&lt;/b&gt;, which do not include product IDs. Wildcard characters (e.g. &lt;code&gt;*&lt;/code&gt;) are not allowed. &lt;/span&gt; &lt;br /&gt;&lt;br /&gt; The keywords are handled as follows: &lt;ul&gt; &lt;li&gt;If the keywords are separated by a comma (e.g. &lt;code&gt;iPhone,256GB&lt;/code&gt;), the query returns products that have &lt;code&gt;iPhone&lt;/code&gt; &lt;b&gt;AND&lt;/b&gt; &lt;code&gt;256GB&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;If the keywords are separated by a space (e.g. &lt;code&gt;\&quot;iPhone&amp;nbsp;ipad\&quot;&lt;/code&gt; or &lt;code&gt;\&quot;iPhone,&amp;nbsp;ipad\&quot;&lt;/code&gt;), the query ignores any commas and returns products that have &lt;code&gt;iPhone&lt;/code&gt; &lt;b&gt;OR&lt;/b&gt; &lt;code&gt;iPad&lt;/code&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;strong&gt;Note:&lt;/strong&gt; Although all query parameters are optional, this method must include at least the &lt;b&gt;q&lt;/b&gt; parameter, or the &lt;b&gt;category_ids&lt;/b&gt;, &lt;b&gt;gtin&lt;/b&gt;, or &lt;b&gt;mpn&lt;/b&gt; parameter with a valid value.  &lt;br /&gt;&lt;br /&gt; You cannot use the &lt;b&gt;q&lt;/b&gt; parameter in the same method with either the &lt;b&gt;gtin&lt;/b&gt; parameter or the &lt;b&gt;mpn&lt;/b&gt; parameter. &lt;/span&gt; (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['search'] to see the possible values for this operation
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function searchAsyncWithHttpInfo($xEBAYCMARKETPLACEID = null, $aspectFilter = null, $categoryIds = null, $fieldgroups = null, $gtin = null, $limit = null, $mpn = null, $offset = null, $q = null, string $contentType = self::contentTypes['search'][0])
    {
        $returnType = '\macropage\SDKs\ebay\rest\catalog\Model\ProductSearchResponse';
        $request = $this->searchRequest($xEBAYCMARKETPLACEID, $aspectFilter, $categoryIds, $fieldgroups, $gtin, $limit, $mpn, $offset, $q, $contentType);

        return $this->client
            ->sendAsync($request, $this->createHttpClientOption())
            ->then(
                function ($response) use ($returnType) {
                    if ($returnType === '\SplFileObject') {
                        $content = $response->getBody(); //stream goes to serializer
                    } else {
                        $content = (string) $response->getBody();
                        if ($returnType !== 'string') {
                            $content = json_decode($content);
                        }
                    }

                    return [
                        ObjectSerializer::deserialize($content, $returnType, []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                },
                function ($exception) {
                    $response = $exception->getResponse();
                    $statusCode = $response->getStatusCode();
                    throw new ApiException(
                        sprintf(
                            '[%d] Error connecting to the API (%s)',
                            $statusCode,
                            $exception->getRequest()->getUri()
                        ),
                        $statusCode,
                        $response->getHeaders(),
                        (string) $response->getBody()
                    );
                }
            );
    }

    /**
     * Create request for operation 'search'
     *
     * @param  string $xEBAYCMARKETPLACEID This method also uses the &lt;code&gt;X-EBAY-C-MARKETPLACE-ID&lt;/code&gt; header to identify the seller&#39;s eBay marketplace. It is required for all marketplaces except EBAY_US, which is the default. &lt;b&gt;Note:&lt;/b&gt; This method is limited to &lt;code&gt;EBAY_US&lt;/code&gt;, &lt;code&gt;EBAY_AU&lt;/code&gt;, &lt;code&gt;EBAY_CA&lt;/code&gt;, and &lt;code&gt;EBAY_GB&lt;/code&gt; values. (optional)
     * @param  string $aspectFilter An eBay category and one or more aspects of that category, with the values that can be used to narrow down the collection of products returned by this call. &lt;br /&gt;&lt;br /&gt; Aspects are product attributes that can represent different types of information for different products. Every product has aspects, but different products have different sets of aspects. &lt;br /&gt;&lt;br /&gt; You can determine appropriate values for the aspects by first submitting this method without this parameter. It will return either the &lt;b&gt;productSummaries.aspects&lt;/b&gt; container, the &lt;b&gt;refinement.aspectDistributions&lt;/b&gt; container, or both, depending on the value of the &lt;b&gt;fieldgroups&lt;/b&gt; parameter in the request. The &lt;b&gt;productSummaries.aspects&lt;/b&gt; container provides the category aspects and their values that are associated with each returned product. The &lt;b&gt;refinement.aspectDistributions&lt;/b&gt; container provides information about the distribution of values of the set of category aspects associated with the specified categories. In both cases sellers can select from among the returned aspects to use with this parameter. &lt;br /&gt;&lt;br /&gt; &lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;strong&gt;Note:&lt;/strong&gt; You can also use the Taxonomy API&#39;s &lt;b&gt;getItemAspectsForCategory&lt;/b&gt; method to retrieve detailed information about aspects and their values that are appropriate for your selected category. &lt;/span&gt; &lt;br /&gt;&lt;br /&gt; The syntax for the &lt;b&gt;aspect_filter&lt;/b&gt; parameter is as follows (on several lines for readability; &lt;b&gt;categoryId&lt;/b&gt; is required): &lt;br /&gt;&lt;br /&gt; &lt;code&gt;aspect_filter&#x3D;categoryId:&lt;i&gt;category_id&lt;/i&gt;,&lt;br /&gt; &lt;i&gt;aspect1&lt;/i&gt;:{&lt;i&gt;valueA&lt;/i&gt;|&lt;i&gt;valueB&lt;/i&gt;|...},&lt;br /&gt; &lt;i&gt;aspect2&lt;/i&gt;:{&lt;i&gt;valueC&lt;/i&gt;|&lt;i&gt;valueD&lt;/i&gt;|...},.&lt;/code&gt; &lt;br /&gt;&lt;br /&gt; A matching product must be within the specified category, and it must have least one of the values identified for every specified aspect. &lt;br /&gt;&lt;br /&gt; &lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;strong&gt;Note:&lt;/strong&gt; Aspect names and values are case sensitive. &lt;/span&gt; &lt;br /&gt;&lt;br /&gt; Here is an example of an &lt;b&gt;aspect_filter&lt;/b&gt; parameter in which &lt;code&gt;9355&lt;/code&gt; is the category ID, &lt;code&gt;Color&lt;/code&gt; is an aspect of that category, and &lt;code&gt;Black&lt;/code&gt; and &lt;code&gt;White&lt;/code&gt; are possible values of that aspect (on several lines for readability): &lt;br /&gt;&lt;br /&gt; &lt;code&gt;GET https://api.ebay.com/commerce/catalog/v1_beta/product_summary/search?&lt;br /&gt; aspect_filter&#x3D;categoryId:9355,Color:{White|Black}&lt;/code&gt;    &lt;br /&gt;&lt;br /&gt; Here is the &lt;b&gt;aspect_filter&lt;/b&gt; with required URL encoding and a second aspect (on several lines for readability): &lt;br /&gt;&lt;br /&gt; &lt;code&gt;GET https://api.ebay.com/commerce/catalog/v1_beta/product_summary/search?&lt;br /&gt; aspect_filter&#x3D;categoryId:9355,Color:%7BWhite%7CBlack%7D,&lt;br /&gt; Storage%20Capacity:%128GB%7C256GB%7D&lt;/code&gt; &lt;br /&gt;&lt;br /&gt; &lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;strong&gt;Note:&lt;/strong&gt; You cannot use the &lt;b&gt;aspect_filter&lt;/b&gt; parameter in the same method with either the &lt;b&gt;gtin&lt;/b&gt; parameter or the &lt;b&gt;mpn&lt;/b&gt; parameter. &lt;/span&gt; For implementation help, refer to eBay API documentation at https://developer.ebay.com/api-docs/commerce/catalog/types/catal:AspectFilter (optional)
     * @param  string $categoryIds &lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;strong&gt;Important:&lt;/strong&gt; Currently, only the first &lt;b&gt;category_id&lt;/b&gt; value is accepted. &lt;/span&gt; &lt;br /&gt;&lt;br /&gt; One or more comma-separated category identifiers for narrowing down the collection of products returned by this call. &lt;br /&gt;&lt;br /&gt; &lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;strong&gt;Note:&lt;/strong&gt; This parameter requires a valid category ID value. You can use the Taxonomy API&#39;s &lt;b&gt;getCategorySuggestions&lt;/b&gt; method to retrieve appropriate category IDs for your product based on keywords. &lt;/span&gt; &lt;br /&gt;&lt;br /&gt; The syntax for this parameter is as follows: &lt;br /&gt;&lt;br /&gt; &lt;code&gt;category_ids&#x3D;&lt;i&gt;category_id1&lt;/i&gt;,&lt;i&gt;category_id2&lt;/i&gt;,.&lt;/code&gt; &lt;br /&gt;&lt;br /&gt; Here is an example of a method with the &lt;b&gt;category_ids&lt;/b&gt; parameter: br /&gt;&lt;br /&gt; &lt;code&gt;GET https://api.ebay.com/commerce/catalog/v1_beta/product_summary/search?&lt;br /&gt; category_ids&#x3D;178893&lt;/code&gt; &lt;br /&gt;&lt;br /&gt; &lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;strong&gt;Note:&lt;/strong&gt; Although all query parameters are optional, this method must include at least the &lt;b&gt;q&lt;/b&gt; parameter, or the &lt;b&gt;category_ids&lt;/b&gt;, &lt;b&gt;gtin&lt;/b&gt;, or &lt;b&gt;mpn&lt;/b&gt; parameter with a valid value. &lt;br /&gt;&lt;br /&gt; If you provide only the &lt;b&gt;category_ids&lt;/b&gt; parameter, you cannot specify a top-level (L1) category. &lt;/span&gt; (optional)
     * @param  string $fieldgroups The type of information to return in the response. &lt;br /&gt;&lt;br /&gt; &lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;strong&gt;Important:&lt;/strong&gt; This parameter may not produce valid results if you also provide more than one value for the &lt;b&gt;category_ids&lt;/b&gt; parameter. It is recommended that you avoid using this combination. &lt;/span&gt; &lt;br /&gt;&lt;br /&gt; &lt;b&gt; Valid Values: &lt;/b&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;ASPECT_REFINEMENTS&lt;/code&gt; &amp;mdash; This returns the &lt;b&gt;refinement&lt;/b&gt; container, which includes the category aspect and aspect value distributions that apply to the returned products. For example, if you searched for &lt;code&gt;Ford Mustang&lt;/code&gt;, some of the category aspects might be &lt;b&gt;Model Year&lt;/b&gt;, &lt;b&gt;Exterior Color&lt;/b&gt;, &lt;b&gt;Vehicle Mileage&lt;/b&gt;, and so on. &lt;br /&gt; &lt;br /&gt; &lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;b&gt;Note: &lt;/b&gt;Aspects are category specific.&lt;/span&gt; &lt;/li&gt; &lt;li&gt;&lt;code&gt;FULL&lt;/code&gt; &amp;mdash; This returns all the refinement containers and all the matching products. This value overrides the other values, which will be ignored.&lt;/li&gt; &lt;li&gt;&lt;code&gt;MATCHING_PRODUCTS&lt;/code&gt; &amp;mdash; This returns summaries for all products that match the values you provide for the &lt;b&gt;q&lt;/b&gt; and &lt;b&gt;category_ids&lt;/b&gt; parameters. This does not affect your use of the &lt;code&gt;ASPECT_REFINEMENTS&lt;/code&gt; value, which you can use in the same call.&lt;/li&gt; &lt;/ul&gt; Code so that your app gracefully handles any future changes to this list. &lt;br /&gt;&lt;br /&gt;&lt;b&gt;Default: &lt;/b&gt; &lt;code&gt;MATCHING_PRODUCTS&lt;/code&gt; (optional)
     * @param  string $gtin A string consisting of one or more comma-separated Global Trade Item Numbers (GTINs) that identify products to search for. Currently the GTIN values can include EAN, ISBN, and UPC identifier types. &lt;br /&gt;&lt;br /&gt; &lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;strong&gt;Note:&lt;/strong&gt; Although all query parameters are optional, this method must include at least the &lt;b&gt;q&lt;/b&gt; parameter, or the &lt;b&gt;category_ids&lt;/b&gt;, &lt;b&gt;gtin&lt;/b&gt;, or &lt;b&gt;mpn&lt;/b&gt; parameter with a valid value.  &lt;br /&gt;&lt;br /&gt; You cannot use the &lt;b&gt;gtin&lt;/b&gt; parameter in the same method with either the &lt;b&gt;q&lt;/b&gt; parameter or the &lt;b&gt;aspect_filter&lt;/b&gt; parameter. &lt;/span&gt; (optional)
     * @param  string $limit The number of product summaries to return. This is the &lt;i&gt;result set&lt;/i&gt;, a subset of the full collection of products that match the search or filter criteria of this call. &lt;br /&gt;&lt;br /&gt; &lt;b&gt;Maximum:&lt;/b&gt; &lt;code&gt;200&lt;/code&gt; &lt;br /&gt; &lt;b&gt;Default:&lt;/b&gt; &lt;code&gt;50&lt;/code&gt; (optional)
     * @param  string $mpn A string consisting of one or more comma-separated Manufacturer Part Numbers (MPNs) that identify products to search for. This method will return all products that have one of the specified MPNs. &lt;br /&gt;&lt;br /&gt; MPNs are defined by manufacturers for their own products, and are therefore certain to be unique only within a given brand. However, many MPNs do turn out to be globally unique. &lt;br /&gt;&lt;br /&gt; &lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;strong&gt;Note:&lt;/strong&gt; Although all query parameters are optional, this method must include at least the &lt;b&gt;q&lt;/b&gt; parameter, or the &lt;b&gt;category_ids&lt;/b&gt;, &lt;b&gt;gtin&lt;/b&gt;, or &lt;b&gt;mpn&lt;/b&gt; parameter with a valid value. &lt;br /&gt;&lt;br /&gt; You cannot use the &lt;b&gt;mpn&lt;/b&gt; parameter in the same method with either the &lt;b&gt;q&lt;/b&gt; parameter or the &lt;b&gt;aspect_filter&lt;/b&gt; parameter. &lt;/span&gt; (optional)
     * @param  string $offset This parameter is reserved for internal or future use. (optional)
     * @param  string $q A string consisting of one or more keywords to use to search for products in the eBay catalog. &lt;br /&gt;&lt;br /&gt; &lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;strong&gt;Note:&lt;/strong&gt; This method searches the following product record fields: &lt;b&gt;title&lt;/b&gt;, &lt;b&gt;description&lt;/b&gt;, &lt;b&gt;brand&lt;/b&gt;, and &lt;b&gt;aspects.localizedName&lt;/b&gt;, which do not include product IDs. Wildcard characters (e.g. &lt;code&gt;*&lt;/code&gt;) are not allowed. &lt;/span&gt; &lt;br /&gt;&lt;br /&gt; The keywords are handled as follows: &lt;ul&gt; &lt;li&gt;If the keywords are separated by a comma (e.g. &lt;code&gt;iPhone,256GB&lt;/code&gt;), the query returns products that have &lt;code&gt;iPhone&lt;/code&gt; &lt;b&gt;AND&lt;/b&gt; &lt;code&gt;256GB&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;If the keywords are separated by a space (e.g. &lt;code&gt;\&quot;iPhone&amp;nbsp;ipad\&quot;&lt;/code&gt; or &lt;code&gt;\&quot;iPhone,&amp;nbsp;ipad\&quot;&lt;/code&gt;), the query ignores any commas and returns products that have &lt;code&gt;iPhone&lt;/code&gt; &lt;b&gt;OR&lt;/b&gt; &lt;code&gt;iPad&lt;/code&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;strong&gt;Note:&lt;/strong&gt; Although all query parameters are optional, this method must include at least the &lt;b&gt;q&lt;/b&gt; parameter, or the &lt;b&gt;category_ids&lt;/b&gt;, &lt;b&gt;gtin&lt;/b&gt;, or &lt;b&gt;mpn&lt;/b&gt; parameter with a valid value.  &lt;br /&gt;&lt;br /&gt; You cannot use the &lt;b&gt;q&lt;/b&gt; parameter in the same method with either the &lt;b&gt;gtin&lt;/b&gt; parameter or the &lt;b&gt;mpn&lt;/b&gt; parameter. &lt;/span&gt; (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['search'] to see the possible values for this operation
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function searchRequest($xEBAYCMARKETPLACEID = null, $aspectFilter = null, $categoryIds = null, $fieldgroups = null, $gtin = null, $limit = null, $mpn = null, $offset = null, $q = null, string $contentType = self::contentTypes['search'][0])
    {











        $resourcePath = '/product_summary/search';
        $formParams = [];
        $queryParams = [];
        $headerParams = [];
        $httpBody = '';
        $multipart = false;

        // query params
        $queryParams = array_merge($queryParams, ObjectSerializer::toQueryValue(
            $aspectFilter,
            'aspect_filter', // param base name
            'string', // openApiType
            'form', // style
            true, // explode
            false // required
        ) ?? []);
        // query params
        $queryParams = array_merge($queryParams, ObjectSerializer::toQueryValue(
            $categoryIds,
            'category_ids', // param base name
            'string', // openApiType
            'form', // style
            true, // explode
            false // required
        ) ?? []);
        // query params
        $queryParams = array_merge($queryParams, ObjectSerializer::toQueryValue(
            $fieldgroups,
            'fieldgroups', // param base name
            'string', // openApiType
            'form', // style
            true, // explode
            false // required
        ) ?? []);
        // query params
        $queryParams = array_merge($queryParams, ObjectSerializer::toQueryValue(
            $gtin,
            'gtin', // param base name
            'string', // openApiType
            'form', // style
            true, // explode
            false // required
        ) ?? []);
        // query params
        $queryParams = array_merge($queryParams, ObjectSerializer::toQueryValue(
            $limit,
            'limit', // param base name
            'string', // openApiType
            'form', // style
            true, // explode
            false // required
        ) ?? []);
        // query params
        $queryParams = array_merge($queryParams, ObjectSerializer::toQueryValue(
            $mpn,
            'mpn', // param base name
            'string', // openApiType
            'form', // style
            true, // explode
            false // required
        ) ?? []);
        // query params
        $queryParams = array_merge($queryParams, ObjectSerializer::toQueryValue(
            $offset,
            'offset', // param base name
            'string', // openApiType
            'form', // style
            true, // explode
            false // required
        ) ?? []);
        // query params
        $queryParams = array_merge($queryParams, ObjectSerializer::toQueryValue(
            $q,
            'q', // param base name
            'string', // openApiType
            'form', // style
            true, // explode
            false // required
        ) ?? []);

        // header params
        if ($xEBAYCMARKETPLACEID !== null) {
            $headerParams['X-EBAY-C-MARKETPLACE-ID'] = ObjectSerializer::toHeaderValue($xEBAYCMARKETPLACEID);
        }



        $headers = $this->headerSelector->selectHeaders(
            ['application/json', ],
            $contentType,
            $multipart
        );

        // for model (json/xml)
        if (count($formParams) > 0) {
            if ($multipart) {
                $multipartContents = [];
                foreach ($formParams as $formParamName => $formParamValue) {
                    $formParamValueItems = is_array($formParamValue) ? $formParamValue : [$formParamValue];
                    foreach ($formParamValueItems as $formParamValueItem) {
                        $multipartContents[] = [
                            'name' => $formParamName,
                            'contents' => $formParamValueItem
                        ];
                    }
                }
                // for HTTP post (form)
                $httpBody = new MultipartStream($multipartContents);

            } elseif (stripos($headers['Content-Type'], 'application/json') !== false) {
                # if Content-Type contains "application/json", json_encode the form parameters
                $httpBody = \GuzzleHttp\Utils::jsonEncode($formParams);
            } else {
                // for HTTP post (form)
                $httpBody = ObjectSerializer::buildQuery($formParams);
            }
        }

        // this endpoint requires OAuth (access token)
        if (!empty($this->config->getAccessToken())) {
            $headers['Authorization'] = 'Bearer ' . $this->config->getAccessToken();
        }

        $defaultHeaders = [];
        if ($this->config->getUserAgent()) {
            $defaultHeaders['User-Agent'] = $this->config->getUserAgent();
        }

        $headers = array_merge(
            $defaultHeaders,
            $headerParams,
            $headers
        );

        $operationHost = $this->config->getHost();
        $query = ObjectSerializer::buildQuery($queryParams);
        return new Request(
            'GET',
            $operationHost . $resourcePath . ($query ? "?{$query}" : ''),
            $headers,
            $httpBody
        );
    }

    /**
     * Create http client option
     *
     * @throws \RuntimeException on file opening failure
     * @return array of http client options
     */
    protected function createHttpClientOption()
    {
        $options = [];
        if ($this->config->getDebug()) {
            $options[RequestOptions::DEBUG] = fopen($this->config->getDebugFile(), 'a');
            if (!$options[RequestOptions::DEBUG]) {
                throw new \RuntimeException('Failed to open the debug file: ' . $this->config->getDebugFile());
            }
        }

        return $options;
    }
}
